import os
import sys
import django
from pathlib import Path

# Obtenir le chemin absolu du r√©pertoire racine du projet
BASE_DIR = Path(__file__).resolve().parent.parent.parent
sys.path.append(str(BASE_DIR))

# Configuration de l'environnement Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce.settings')
django.setup()

from products.models import Category, Product, ProductImage
from django.db import transaction

def clear_database():
    """
    Vide toutes les tables de la base de donn√©es li√©es aux produits
    """
    try:
        with transaction.atomic():
            # Supprimer d'abord les images des produits
            ProductImage.objects.all().delete()
            print("‚úì Les images des produits ont √©t√© supprim√©es")

            # Supprimer les produits
            Product.objects.all().delete()
            print("‚úì Les produits ont √©t√© supprim√©s")

            # Supprimer les cat√©gories
            Category.objects.all().delete()
            print("‚úì Les cat√©gories ont √©t√© supprim√©es")

            print("\n‚ú® La base de donn√©es a √©t√© vid√©e avec succ√®s!")

    except Exception as e:
        print(f"\n‚ùå Une erreur est survenue lors de la suppression des donn√©es : {str(e)}")

if __name__ == '__main__':
    # Demander confirmation avant de vider la base de donn√©es
    confirmation = input("‚ö†Ô∏è  Attention! Vous √™tes sur le point de vider toutes les tables de la base de donn√©es. "
                      "Cette action est irr√©versible.\n√ätes-vous s√ªr de vouloir continuer ? (oui/non) : ")
    
    if confirmation.lower() == 'oui':
        clear_database()
    else:
        print("\nüõë Op√©ration annul√©e. Aucune donn√©e n'a √©t√© supprim√©e.")
